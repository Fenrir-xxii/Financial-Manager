<Window x:Class="WpfApp9_MyFinances.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:local="clr-namespace:WpfApp9_MyFinances"
        xmlns:lvc="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf" xmlns:local1="clr-namespace:WpfApp9_MyFinances.Converters"
        mc:Ignorable="d"
        xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"
        Title="MainWindow" Height="450" Width="800">
    <Window.Resources>
        <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="Visibility" Value="Visible" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"></Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border
                        CornerRadius="3"
                        Background="{TemplateBinding Background}"
                        BorderThickness="0"
                        Width="6" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarThumbHor" TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border
                        CornerRadius="3"
                        Background="{TemplateBinding Background}"
                        BorderThickness="0"
                        Height="6" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
            <Track
            Name="PART_Track"
            IsDirectionReversed="true">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb
                    Style="{StaticResource ScrollBarThumb}"
                    Margin="2,0,2,0"
                    Background="#1A2C2C" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageDownCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
        </ControlTemplate>

        <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
            <Track
            Name="PART_Track"
            IsDirectionReversed="False">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageLeftCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb
                    Style="{StaticResource ScrollBarThumbHor}"
                    Margin="0,2,0,2"
                    Background="#1A2C2C" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageRightCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
        </ControlTemplate>

        <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="Auto" />
                    <Setter Property="Height" Value="10" />
                    <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
                </Trigger>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Width" Value="10" />
                    <Setter Property="Height" Value="Auto" />
                    <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="FavsScrollViewer" TargetType="{x:Type ScrollViewer}">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="CanContentScroll" Value="True"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <ScrollContentPresenter Grid.Column="1" />
                            <ScrollBar
                            Grid.Row="0"
                            Grid.Column="0"
                            Name="PART_VerticalScrollBar"
                            Value="{TemplateBinding VerticalOffset}"
                            Maximum="{TemplateBinding ScrollableHeight}"
                            ViewportSize="{TemplateBinding ViewportHeight}"
                            Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" />
                            <ScrollBar
                            Name="PART_HorizontalScrollBar"
                            Orientation="Horizontal"
                            Grid.Row="1"
                            Grid.Column="1"
                            Value="{TemplateBinding HorizontalOffset}"
                            Maximum="{TemplateBinding ScrollableWidth}"
                            ViewportSize="{TemplateBinding ViewportWidth}"
                            Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type ScrollViewer}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <ScrollContentPresenter Grid.Column="0" />
                            <ScrollBar
                            x:Name="PART_VerticalScrollBar"
                            Grid.Row="0"
                            Grid.Column="1"
                            Value="{TemplateBinding VerticalOffset}"
                            Maximum="{TemplateBinding ScrollableHeight}"
                            ViewportSize="{TemplateBinding ViewportHeight}"
                            Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" />
                            <ScrollBar
                            x:Name="PART_HorizontalScrollBar"
                            Orientation="Horizontal"
                            Grid.Row="1"
                            Grid.Column="0"
                            Value="{TemplateBinding HorizontalOffset}"
                            Maximum="{TemplateBinding ScrollableWidth}"
                            ViewportSize="{TemplateBinding ViewportWidth}"
                            Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="ComboBox.Static.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#C4C9C9" Offset="0.0"/>
            <GradientStop Color="#C4C9C9" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Static.Border" Color="#1E3232"/>
        <SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="#1E3232"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="#C4C9C9"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="#FFABADB3"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#1E3232" Offset="0.0"/>
            <GradientStop Color="#C4C9C9" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="#FF000000"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="#FF7EB4EA"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFEBF4FC" Offset="0.0"/>
            <GradientStop Color="#FFDCECFC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="#FF7EB4EA"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFDAECFC" Offset="0.0"/>
            <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#FF569DE5"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="#FF000000"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="#FF569DE5"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFDAEBFC" Offset="0.0"/>
            <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#FF569DE5"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="#FFF0F0F0"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFD9D9D9"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent"/>
        <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="ClickMode" Value="Press"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="templateRoot" Background="{StaticResource ComboBox.Static.Background}" BorderBrush="{StaticResource ComboBox.Static.Border}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="true" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                <Path x:Name="arrow" Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z" Fill="{StaticResource ComboBox.Static.Glyph}" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.MouseOver.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Pressed.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Disabled.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxTemplate1" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                    <theme:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MinWidth="{Binding ActualWidth, ElementName=templateRoot}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                        <Border x:Name="dropDownBorder" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </theme:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}" Background="#FF0C4848"/>
                <ContentPresenter x:Name="contentPresenter" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>



        <ControlTemplate x:Key="ButtonTemplate" TargetType="{x:Type Button}">
            <Border Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Margin="{TemplateBinding Padding}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsMouseOver" Value="True">
                    <Setter TargetName="Border" Property="BorderBrush" Value="NavajoWhite" />
                </Trigger>
            </ControlTemplate.Triggers>
            <ControlTemplate.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="7"/>
                </Style>
                <!--<Style TargetType="Button">
                    <Setter Property="Background" Value="#263F3F"></Setter>
                    <Setter Property="Foreground" Value="White"></Setter>
                </Style>-->
            </ControlTemplate.Resources>
        </ControlTemplate>
        <Style TargetType="Button">
            <Setter Property="Background" Value="#263F3F"></Setter>
            <!--<Setter Property="Foreground" Value="White"></Setter>-->
            <Setter Property="Foreground" Value="NavajoWhite"></Setter>
            <Setter Property="Template" Value="{StaticResource ButtonTemplate}"></Setter>
        </Style>
        <Style TargetType="Grid">
            <Setter Property="Background" Value="DarkSlateGray"></Setter>
        </Style>
        <Style TargetType="TabItem">
            <Setter Property="Background" Value="#1E3232"></Setter>
            <Setter Property="Foreground" Value="White"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabItem">
                        <Grid>
                            <Border 
                                Name="Border"
                                Margin="0,0,-4,0" 
                                Background="DarkSlateGray"
                                BorderBrush="AliceBlue" 
                                BorderThickness="1,1,1,1" 
                                CornerRadius="2,12,0,0" >
                                <ContentPresenter x:Name="ContentSite"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Center"
                                    ContentSource="Header"
                                    Margin="12,2,12,2"
                                    RecognizesAccessKey="True"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Panel.ZIndex" Value="100" />
                                <Setter TargetName="Border" Property="Background" Value="#1E3232" />
                                <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,0" />
                                <Setter Property="Background" Value="#1E3232"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="TabControl">
            <Setter Property="Background" Value="#1E3232"></Setter>
        </Style>
        <Style TargetType="ComboBox">
            <Setter Property="Template" Value="{StaticResource ComboBoxTemplate1}"></Setter>
        </Style>
        <Style TargetType="TextBox">
            <Setter Property="Background" Value="#C4C9C9"></Setter>
        </Style>
        <Style TargetType="DataGrid">
            <!--<Style.Triggers>
                <Trigger Property="DataGridCell.IsSelected" Value="True">
                    <Setter Property="Background" Value="#CCDAFF" />
                </Trigger>
            </Style.Triggers>-->
            <Style.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" 
                            Color="#344646"/>
                <ContextMenu x:Key="RowMenu"></ContextMenu>
            </Style.Resources>
        </Style>

        <Style x:Key="{x:Type ContextMenu}" TargetType="{x:Type ContextMenu}">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ContextMenu}">
                        <Border Background="#485858" CornerRadius="7, 7, 8, 8" BorderBrush="DarkGray" BorderThickness="2" Opacity="0.96" Name="Bord">
                            <StackPanel ClipToBounds="True" Orientation="Vertical" IsItemsHost="True" Margin="5,4,5,4"></StackPanel>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="MenuItem">
            <Setter Property="OverridesDefaultStyle" Value="True"></Setter>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Foreground" Value="black"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type MenuItem}">
                        <Border Name="Border" BorderThickness="0">
                            <Grid>
                                <ContentPresenter Margin="6,3,6,3" ContentSource="Header" RecognizesAccessKey="True" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="Border" Property="BorderBrush" Value="red"></Setter>
                                <Setter TargetName="Border" Property="BorderThickness" Value="0,0,0,1"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Foreground" Value="NavajoWhite"/>
                </Trigger>
            </Style.Triggers>
        </Style>

    </Window.Resources>

    <TabControl>
        <TabItem Header="Wallet">
            <Border Padding="7" BorderThickness="4" Background="DarkSlateGray">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="80*"></ColumnDefinition>
                        <ColumnDefinition Width="20*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="10*"></RowDefinition>
                        <RowDefinition Height="80*"></RowDefinition>
                        <RowDefinition Height="10*"></RowDefinition>
                    </Grid.RowDefinitions>
                    <DataGrid
                        Grid.Row="1"
                        AutoGenerateColumns="False" 
                        IsReadOnly="True" 
                        ItemsSource="{Binding Path=PaymentMethods}"
                        SelectedItem="{Binding Path=SelectedPaymentMethod}"
                        ColumnWidth="*"
                        Background="#C4C9C9"
                        AlternatingRowBackground="#D0D4D4">
                        <DataGrid.ColumnHeaderStyle>
                            <Style TargetType="{x:Type DataGridColumnHeader}">
                                <Setter Property="FontWeight" Value="Bold"/>
                                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                <Setter Property="FontFamily" Value="Times New Roman"/>
                                <Setter Property="Background" Value="#1E3232"></Setter>
                                <Setter Property="Foreground" Value="White"></Setter>
                                <Setter Property="Height" Value="18"></Setter>
                            </Style>
                        </DataGrid.ColumnHeaderStyle>
                        <DataGrid.ContextMenu>
                            <ContextMenu>
                                <!--<MenuItem Header="Test" ></MenuItem>-->
                                <MenuItem Header="Show Transactions" Command="{Binding Path=ShowAllTransactions}"></MenuItem>
                            </ContextMenu>
                        </DataGrid.ContextMenu>
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Id" Binding="{Binding Path=Id}" Width="7*"></DataGridTextColumn>
                            <DataGridTextColumn Header="Name" Binding="{Binding Path=Title}" Width="26*"></DataGridTextColumn>
                            <DataGridTextColumn Header="Balance" Width="18*">
                                <DataGridTextColumn.Binding>
                                    <MultiBinding Converter="{StaticResource localizeCurrencyMultiConverter}">
                                        <Binding Path="CurrentBalance"></Binding>
                                        <Binding Path="Currency.CodeNumber"></Binding>
                                    </MultiBinding>
                                </DataGridTextColumn.Binding>
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="HorizontalAlignment" Value="Right" />
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>
                            <!--<DataGridTextColumn Header="Balance" Binding="{Binding Path=CurrentBalance, StringFormat='C', ConverterCulture='uk-UA'}" Width="18*">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="HorizontalAlignment" Value="Right" />
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>-->
                            <DataGridTextColumn Header="Currency" Binding="{Binding Path=Currency.CodeLetter}" Width="11*"></DataGridTextColumn>
                            <DataGridTextColumn Header="IsCash" Binding="{Binding Path=IsCash}" Width="8*"></DataGridTextColumn>
                            <DataGridTextColumn Header="Description" Binding="{Binding Path=Description}" Width="30*"></DataGridTextColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Button Margin="200,5,200,5" Grid.Column="0" Grid.Row="0" Content="Add" Command="{Binding Path=AddNewPaymentMethod}">
                        <Button.Resources>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="CornerRadius" Value="7"/>
                            </Style>
                        </Button.Resources>
                    </Button>
                    <ScrollViewer Grid.Column="2" Grid.Row="1" Margin="2" PreviewMouseWheel="ScrollViewer_PreviewMouseWheel">
                        <StackPanel>
                            <!--<Button Margin="2,0,2,0">Add</Button>-->
                            <!--<TextBlock>Total cashless:</TextBlock>
                        <TextBlock Text="{Binding Path=TotalInCashless, StringFormat=C, ConverterCulture='uk-UA'}"></TextBlock>
                        <TextBlock>Total in cash:</TextBlock>
                        <TextBlock Text="{Binding Path=TotalInCash, StringFormat=C, ConverterCulture='uk-UA'}"></TextBlock>
                        <TextBlock>Total in general:</TextBlock>
                        <TextBlock Text="{Binding Path=TotalMoney, StringFormat=C, ConverterCulture='uk-UA'}"></TextBlock>-->
                            <TextBlock Text="Total cashless: " Foreground="NavajoWhite" HorizontalAlignment="Right" FontWeight="Bold"></TextBlock>
                            <ListView ItemsSource="{Binding Path=TotalInCashlessAllCurrencies}" Background="#263F3F" Foreground="NavajoWhite" HorizontalContentAlignment="Right"></ListView>
                            <TextBlock Text="Total in cash: " Foreground="NavajoWhite" HorizontalAlignment="Right" FontWeight="Bold"></TextBlock>
                            <ListView ItemsSource="{Binding Path=TotalInCashAllCurrencies}" Background="#263F3F" Foreground="NavajoWhite" HorizontalContentAlignment="Right"></ListView>
                            <TextBlock Text ="Total in general: " Foreground="NavajoWhite" HorizontalAlignment="Right" FontWeight="Bold"></TextBlock>
                            <ListView ItemsSource="{Binding Path=TotalMoneyAllCurrencies, StringFormat={}{0:C}}" Background="#263F3F" Foreground="NavajoWhite" HorizontalContentAlignment="Right"></ListView>
                        </StackPanel>
                    </ScrollViewer>
                    <Button Grid.Column="0" Grid.Row="2" Margin="50,5,50,5" Command="{Binding Path=AddTransaction}" Content="New Transaction">
                        <Button.Resources>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="CornerRadius" Value="7"/>
                            </Style>
                        </Button.Resources>
                    </Button>
                </Grid>
            </Border>
        </TabItem>
        
        <TabItem Header="Recurring Charges">
            <Border Padding="7" BorderThickness="4" Background="DarkSlateGray">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="10*"></RowDefinition>
                        <RowDefinition Height="80*"></RowDefinition>
                        <RowDefinition Height="10*"></RowDefinition>
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Row="0" Text="R E C U R R I N G   C H A R G E S " Foreground="NavajoWhite" FontSize="30" FontWeight="Bold" FontStyle="Oblique" HorizontalAlignment="Center" VerticalAlignment="Center"></TextBlock>
                    <DataGrid
                        Grid.Row="1"
                        AutoGenerateColumns="False" 
                        IsReadOnly="True" 
                        ItemsSource="{Binding Path=RecurringCharges}"
                        SelectedItem="{Binding Path=SelectedRecurringCharge}"
                        ColumnWidth="*"
                        Background="#C4C9C9"
                        AlternatingRowBackground="#D0D4D4">
                        <DataGrid.ColumnHeaderStyle>
                            <Style TargetType="{x:Type DataGridColumnHeader}">
                                <Setter Property="FontWeight" Value="Bold"/>
                                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                <Setter Property="FontFamily" Value="Times New Roman"/>
                                <Setter Property="Background" Value="#1E3232"></Setter>
                                <Setter Property="Foreground" Value="White"></Setter>
                                <Setter Property="Height" Value="18"></Setter>
                            </Style>
                        </DataGrid.ColumnHeaderStyle>
                        <DataGrid.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Full info" Command="{Binding Path=ShowFullInfoOfRecurringCharge}"></MenuItem>
                                <MenuItem Header="Edit" Command="{Binding Path=EditRecurringCharge}"></MenuItem>
                                <MenuItem Header="Delete" Command="{Binding Path=DeleteRecurringCharge}"></MenuItem>
                            </ContextMenu>
                        </DataGrid.ContextMenu>
                        <DataGrid.Columns>
                            <!--<DataGridTextColumn Header="Id" Binding="{Binding Path=Id}" Width="3*"></DataGridTextColumn>-->
                            <DataGridTextColumn Header="Name" Binding="{Binding Path=Title}" Width="15*"></DataGridTextColumn>
                            <DataGridTextColumn Header="Amount" Width="10*">
                                <DataGridTextColumn.Binding>
                                    <MultiBinding Converter="{StaticResource localizeCurrencyMultiConverter}">
                                        <Binding Path="Amount"></Binding>
                                        <Binding Path="Currency.CodeNumber"></Binding>
                                    </MultiBinding>
                                </DataGridTextColumn.Binding>
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="HorizontalAlignment" Value="Right" />
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>
                            <DataGridTextColumn Header="Currency" Binding="{Binding Path=Currency.CodeLetter}" Width="9*"></DataGridTextColumn>
                            <DataGridTextColumn Header="Category" Binding="{Binding Path=Category.Title}" Width="10*"></DataGridTextColumn>
                            <DataGridTextColumn Header="SubCategory" Binding="{Binding Path=Subcategory.Title}" Width="10*"></DataGridTextColumn>
                            <!--<DataGridTextColumn Header="Provider" Binding="{Binding Path=Provider.Title}" Width="10*"></DataGridTextColumn>-->
                            <!--<DataGridTextColumn Header="Payment method" Binding="{Binding Path=PaymentMethod.Title}" Width="10*"></DataGridTextColumn>-->
                            <DataGridTextColumn Header="Auto payment" Binding="{Binding Path=AutoPayment}" Width="10*"></DataGridTextColumn>
                            <DataGridTextColumn Header="Periodicity" Binding="{Binding Path=PeriodicityText}" Width="10*"></DataGridTextColumn>
                            <!--<DataGridTextColumn Header="Description" Binding="{Binding Path=Description}" Width="10*"></DataGridTextColumn>-->
                            <DataGridTextColumn Header="Next Payment" Binding="{Binding Path=DateOfNextPayment, StringFormat='dd.MM.yyyy'}" Width="10*"></DataGridTextColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Button Margin="200,5,200,5" Grid.Column="0" Grid.Row="2" Content="Add" Command="{Binding Path=AddRecuringCharge}">
                        <!--<Button.Resources>
                            -->
                        <!--<Style TargetType="{x:Type Border}">
                                <Setter Property="CornerRadius" Value="7"/>
                            </Style>-->
                        <!--
                        </Button.Resources>-->
                    </Button>
                </Grid>
            </Border>
        </TabItem>
        <TabItem Header="Loans">
            <Grid>
                <Grid.ColumnDefinitions>
                    <!--<ColumnDefinition Width="167*"/>
                    <ColumnDefinition Width="68*"/>
                    <ColumnDefinition Width="14*"/>
                    <ColumnDefinition Width="55*"/>
                    <ColumnDefinition Width="490*"/>-->
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="60*"></RowDefinition>
                    <RowDefinition Height="8*"></RowDefinition>
                    <RowDefinition Height="5*"></RowDefinition>
                    <RowDefinition Height="35*"></RowDefinition>
                </Grid.RowDefinitions>
                <!--<TextBlock HorizontalAlignment="Center" VerticalAlignment="Center">
                                        <TextBlock Text="Search by title: "></TextBlock>
                                        <TextBox MinWidth="550" Text="{Binding Path=SearchBox, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></TextBox>
                                    </TextBlock>-->
                <DataGrid Grid.Row="0"
                                        AutoGenerateColumns="False" 
                                        IsReadOnly="True" 
                                        ItemsSource="{Binding Path=Loans}"
                                        SelectedItem="{Binding Path=SelectedLoan}"
                                        Background="#C4C9C9"
                                        AlternatingRowBackground="#D0D4D4"
                                        ColumnWidth="*" Grid.ColumnSpan="5">
                    <DataGrid.ColumnHeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <!--<Setter Property="FontWeight" Value="Bold"/>-->
                            <Setter Property="HorizontalAlignment" Value="Stretch"/>
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            <Setter Property="FontFamily" Value="Times New Roman"/>
                            <Setter Property="Background" Value="#1E3232"></Setter>
                            <Setter Property="Foreground" Value="White"></Setter>
                            <Setter Property="Height" Value="16"></Setter>
                        </Style>
                    </DataGrid.ColumnHeaderStyle>
                    <DataGrid.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Edit" Command="{Binding Path=EditLoan}"></MenuItem>
                            <MenuItem Header="Delete" Command="{Binding Path=DeleteLoan}"></MenuItem>
                        </ContextMenu>
                    </DataGrid.ContextMenu>
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Date" Binding="{Binding Path=DateOfLoan, StringFormat=dd.MM.yyyy}" Width="15*"></DataGridTextColumn>
                        <DataGridTextColumn Header="Payment Method" Binding="{Binding Path=LoanPaymentMethod.Title}" Width="20*"></DataGridTextColumn>
                        <DataGridTextColumn Header="Amount" Width="15*">
                            <DataGridTextColumn.Binding>
                                <MultiBinding Converter="{StaticResource localizeCurrencyMultiConverter}">
                                    <Binding Path="LoanAmount"></Binding>
                                    <Binding Path="LoanPaymentMethod.Currency.CodeNumber"></Binding>
                                </MultiBinding>
                            </DataGridTextColumn.Binding>
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock">
                                    <Setter Property="HorizontalAlignment" Value="Right" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Header="Payback amount" Width="15*">
                            <DataGridTextColumn.Binding>
                                <MultiBinding Converter="{StaticResource localizeCurrencyMultiConverter}">
                                    <Binding Path="TotalAmountPayback"></Binding>
                                    <Binding Path="LoanPaymentMethod.Currency.CodeNumber"></Binding>
                                </MultiBinding>
                            </DataGridTextColumn.Binding>
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock">
                                    <Setter Property="HorizontalAlignment" Value="Right" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Header="Payback balance" Width="15*">
                            <DataGridTextColumn.Binding>
                                <MultiBinding Converter="{StaticResource localizeCurrencyMultiConverter}">
                                    <Binding Path="LoanBalance"></Binding>
                                    <Binding Path="LoanPaymentMethod.Currency.CodeNumber"></Binding>
                                </MultiBinding>
                            </DataGridTextColumn.Binding>
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock">
                                    <Setter Property="HorizontalAlignment" Value="Right" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}, Path=Item.LoanGiver }" Value="Me">
                                            <Setter Property="Foreground" Value="Green"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}, Path=Item.LoanReceiver }" Value="Me">
                                            <Setter Property="Foreground" Value="Red"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Header="Giver" Binding="{Binding Path=LoanGiver}" Width="15*">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock">
                                    <Style.Triggers>
                                        <Trigger Property="Text" Value="Me">
                                            <Setter Property="Foreground" Value="Green"></Setter>
                                        </Trigger>
                                    </Style.Triggers>
                                    <Setter Property="HorizontalAlignment" Value="Right" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Header="Receiver" Binding="{Binding Path=LoanReceiver}" Width="15*">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock">
                                    <Style.Triggers>
                                        <Trigger Property="Text" Value="Me">
                                            <Setter Property="Foreground" Value="Red"></Setter>
                                        </Trigger>
                                    </Style.Triggers>
                                    <Setter Property="HorizontalAlignment" Value="Right" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Header="Description" Binding="{Binding Path=LoanDescription}" Width="15*"></DataGridTextColumn>
                        <DataGridTextColumn Header="Is closed" Binding="{Binding Path=IsLoanClosed}" Width="10*"></DataGridTextColumn>
                    </DataGrid.Columns>
                </DataGrid>
                <Button Grid.Row="1" Margin="300,3,300,3" Command="{Binding Path=AddNewLoan}">Add</Button>
                <TextBlock Text="P A Y B A C K S" TextAlignment="Center" FontWeight="Bold" Grid.Row="2" Grid.ColumnSpan="5" Grid.RowSpan="3"/>
                <DataGrid Grid.Row="3" 
                          AutoGenerateColumns="False" 
                          IsReadOnly="True" 
                          ItemsSource="{Binding Path=SelectedLoan.LoanPaybacks}"
                          SelectedItem="{Binding Path=SelectedLoanPayback}"
                          Background="#C4C9C9"
                          AlternatingRowBackground="#D0D4D4"
                          ColumnWidth="*" Grid.ColumnSpan="5">
                    <DataGrid.ColumnHeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="FontWeight" Value="Bold"/>
                            <Setter Property="HorizontalAlignment" Value="Stretch"/>
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            <Setter Property="FontFamily" Value="Times New Roman"/>
                            <Setter Property="Background" Value="#1E3232"></Setter>
                            <Setter Property="Foreground" Value="White"></Setter>
                            <Setter Property="Height" Value="14"></Setter>
                        </Style>
                    </DataGrid.ColumnHeaderStyle>
                    <DataGrid.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Edit" Command="{Binding Path=EditLoanPayback}"></MenuItem>
                        </ContextMenu>
                    </DataGrid.ContextMenu>
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Date" Binding="{Binding Path=Date, StringFormat=dd.MM.yyyy}" Width="15*"></DataGridTextColumn>
                        <DataGridTextColumn Header="Amount" Width="15*">
                            <DataGridTextColumn.Binding>
                                <MultiBinding Converter="{StaticResource localizeCurrencyMultiConverter}">
                                    <Binding Path="Amount"></Binding>
                                    <Binding Path="CurrencyCodeNumber"></Binding>
                                </MultiBinding>
                            </DataGridTextColumn.Binding>
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock">
                                    <Setter Property="HorizontalAlignment" Value="Right" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Header="Description" Binding="{Binding Path=Description}" Width="30*"></DataGridTextColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
        </TabItem>
        <TabItem Header="Statistics">
            <TabControl>
                <TabControl.Resources>
                    <Style TargetType="TabPanel">
                        <Setter Property="HorizontalAlignment" Value="Right"/>
                    </Style>
                </TabControl.Resources>
                <TabItem Header="Expenses">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="{Binding Path=DatePickerColumnWidthExp, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"></ColumnDefinition>
                            <ColumnDefinition Width="87*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <StackPanel Grid.Row="0" Grid.Column="0">
                            <DockPanel>
                                <Button DockPanel.Dock="Top" Command="{Binding Path=ShowHideDatePickerColumnExp}" Background="OrangeRed">*</Button>
                            </DockPanel>
                            <TextBlock Text="From:"></TextBlock>
                            <xctk:DateTimePicker Format="Custom" FormatString="dd.MM.yyyy" AutoCloseCalendar="True" Value="{Binding Path=BeginDateExp}" Maximum="{Binding Path=EndDateExp}"></xctk:DateTimePicker>
                            <TextBlock Text="To:"></TextBlock>
                            <xctk:DateTimePicker Format="Custom" FormatString="dd.MM.yyyy" AutoCloseCalendar="True" Value="{Binding Path=EndDateExp}" Minimum="{Binding Path=BeginDateExp}"></xctk:DateTimePicker>
                            <TextBlock Text="Currency:"></TextBlock>
                            <StackPanel>
                                <ComboBox ItemsSource="{Binding Path=Currencies}" SelectedItem="{Binding Path=FilterSelectedCurrencyExp}" Name="CurrencyComboBoxExp">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Path=CodeLetter}"></TextBlock>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                                <!--<Button Background="SlateGray" Foreground="Red" FontWeight="Bold" Command="{Binding Path=RemovePaymentMethodFilterCommand}">x</Button>-->
                            </StackPanel>
                            <TextBlock Text="Payment method:"></TextBlock>
                            <StackPanel>
                                <ComboBox ItemsSource="{Binding Path=PaymentMethods}" SelectedItem="{Binding Path=FilterSelectedPaymentMethodExp}" Name="PaymentMethodComboBoxExp">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Path=Title}"></TextBlock>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                                <Button Background="SlateGray" Foreground="Red" FontWeight="Bold" Command="{Binding Path=RemovePaymentMethodExpFilter}" Height="20">x</Button>
                            </StackPanel>
                            <TextBlock Text="Provider:"></TextBlock>
                            <StackPanel>
                                <ComboBox ItemsSource="{Binding Path=Providers}" SelectedItem="{Binding Path=FilterSelectedProviderExp}" Name="ProviderComboBoxExp">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Path=Title}"></TextBlock>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                                <Button Background="SlateGray" Foreground="Red" FontWeight="Bold" Command="{Binding Path=RemoveProviderExpFilter}" Height="20">x</Button>
                            </StackPanel>
                            <TextBlock Text="Category:"></TextBlock>
                            <StackPanel>
                                <ComboBox ItemsSource="{Binding Path=CategoriesExp}" SelectedItem="{Binding Path=FilterSelectedCategoryExp}" Name="CategoryComboBoxExp">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Path=Title}"></TextBlock>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                                <Button Background="SlateGray" Foreground="Red" FontWeight="Bold" Command="{Binding Path=RemoveCategoryExpFilter}" Height="20">x</Button>
                            </StackPanel>
                        </StackPanel>

                        <TabControl Grid.Column="1">
                            <TabItem Header="Columns">
                                <lvc:CartesianChart Series="{Binding ChartCategoriesExp}" LegendLocation="Right" Background="#222E31" Foreground="White">
                                    <lvc:CartesianChart.SeriesColors>
                                        <lvc:ColorsCollection>
                                            <Color>Orange</Color>
                                        </lvc:ColorsCollection>
                                    </lvc:CartesianChart.SeriesColors>
                                    <lvc:CartesianChart.DataTooltip>
                                        <lvc:DefaultTooltip Background="Black">

                                        </lvc:DefaultTooltip>
                                    </lvc:CartesianChart.DataTooltip>
                                    <lvc:CartesianChart.AxisY>
                                        <lvc:Axis Title="Expense count&#x0a; " LabelFormatter="{Binding Formatter}" Foreground="White">
                                            <lvc:Axis.Separator>
                                                <lvc:Separator StrokeThickness="2" StrokeDashArray="4" Step="1">
                                                    <lvc:Separator.Stroke>
                                                        <SolidColorBrush Color="#404F56" />
                                                    </lvc:Separator.Stroke>
                                                </lvc:Separator>
                                            </lvc:Axis.Separator>
                                        </lvc:Axis>
                                    </lvc:CartesianChart.AxisY>
                                    <lvc:CartesianChart.AxisX>
                                        <lvc:Axis Title="&#x0a;Categories" Labels="{Binding LabelsExp}" Foreground="White">
                                            <lvc:Axis.Separator>
                                                <lvc:Separator StrokeThickness="0" StrokeDashArray="0">
                                                    <lvc:Separator.Stroke>
                                                        <SolidColorBrush Color="#404F56" />
                                                    </lvc:Separator.Stroke>
                                                </lvc:Separator>
                                            </lvc:Axis.Separator>
                                        </lvc:Axis>
                                    </lvc:CartesianChart.AxisX>
                                </lvc:CartesianChart>
                            </TabItem>
                            <TabItem Header="Pie">
                                <lvc:PieChart LegendLocation="Right" Background="CadetBlue" DataClick="Chart_OnDataClick" Hoverable="False" DataTooltip="{x:Null}"
                        Series="{Binding ChartCategoriesExpPie}">
                                    <lvc:PieChart.Resources>
                                        <Style TargetType="lvc:PieSeries">
                                            <Setter Property="Foreground" Value="Black"></Setter>
                                            <Setter Property="StrokeThickness" Value="1"></Setter>
                                            <Setter Property="Stroke" Value="DarkGray"></Setter>
                                        </Style>
                                    </lvc:PieChart.Resources>
                                </lvc:PieChart>
                            </TabItem>
                            <TabItem Header="List">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="10*"></RowDefinition>
                                        <RowDefinition Height="90*"></RowDefinition>
                                    </Grid.RowDefinitions>
                                    <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center">
                                        <TextBlock Text="Search by title: "></TextBlock>
                                        <TextBox MinWidth="550" Text="{Binding Path=SearchBoxExp, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></TextBox>
                                    </TextBlock>
                                    <DataGrid Grid.Row="1"
                                        AutoGenerateColumns="False" 
                                        IsReadOnly="True" 
                                        ItemsSource="{Binding Path=FilteredExpenses}"
                                        SelectedItem=""
                                        Background="#C4C9C9"
                                        AlternatingRowBackground="#D0D4D4"
                                        ColumnWidth="*">
                                        <DataGrid.ColumnHeaderStyle>
                                            <Style TargetType="{x:Type DataGridColumnHeader}">
                                                <!--<Setter Property="FontWeight" Value="Bold"/>-->
                                                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                <Setter Property="FontFamily" Value="Times New Roman"/>
                                                <Setter Property="Background" Value="#1E3232"></Setter>
                                                <Setter Property="Foreground" Value="White"></Setter>
                                                <Setter Property="Height" Value="16"></Setter>
                                            </Style>
                                        </DataGrid.ColumnHeaderStyle>
                                        <DataGrid.Columns>
                                            <DataGridTextColumn Header="Date" Binding="{Binding Path=DateOfExpense, StringFormat=dd.MM.yyyy}" Width="15*"></DataGridTextColumn>
                                            <DataGridTextColumn Header="Title" Binding="{Binding Path=Title}" Width="20*"></DataGridTextColumn>
                                            <DataGridTextColumn Header="Category" Binding="{Binding Path=Category.Title}" Width="15*"></DataGridTextColumn>
                                            <DataGridTextColumn Header="Subcategory" Binding="{Binding Path=Subcategory.Title, TargetNullValue='-'}" Width="15*"></DataGridTextColumn>
                                            <DataGridTextColumn Header="Payment Method" Binding="{Binding Path=PaymentMethod.Title}" Width="20*"></DataGridTextColumn>
                                            <DataGridTextColumn Header="Amount" Width="15*">
                                                <DataGridTextColumn.Binding>
                                                    <MultiBinding Converter="{StaticResource localizeCurrencyMultiConverter}">
                                                        <Binding Path="Amount"></Binding>
                                                        <Binding Path="PaymentMethod.Currency.CodeNumber"></Binding>
                                                    </MultiBinding>
                                                </DataGridTextColumn.Binding>
                                                <DataGridTextColumn.ElementStyle>
                                                    <Style TargetType="TextBlock">
                                                        <Setter Property="HorizontalAlignment" Value="Right" />
                                                    </Style>
                                                </DataGridTextColumn.ElementStyle>
                                            </DataGridTextColumn>
                                        </DataGrid.Columns>

                                    </DataGrid>
                                </Grid>
                            </TabItem>
                        </TabControl>
                    </Grid>
                </TabItem>
                <TabItem Header="Incomes">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="{Binding Path=DatePickerColumnWidthInc, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"></ColumnDefinition>
                            <ColumnDefinition Width="87*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <StackPanel Grid.Row="0" Grid.Column="0">
                            <DockPanel>
                                <Button DockPanel.Dock="Top" Command="{Binding Path=ShowHideDatePickerColumnInc}" Background="OrangeRed">*</Button>
                            </DockPanel>
                            <TextBlock Text="From:"></TextBlock>
                            <xctk:DateTimePicker Format="Custom" FormatString="dd.MM.yyyy" AutoCloseCalendar="True" Value="{Binding Path=BeginDateInc}" Maximum="{Binding Path=EndDateInc}"></xctk:DateTimePicker>
                            <TextBlock Text="To:"></TextBlock>
                            <xctk:DateTimePicker Format="Custom" FormatString="dd.MM.yyyy" AutoCloseCalendar="True" Value="{Binding Path=EndDateInc}" Minimum="{Binding Path=BeginDateInc}"></xctk:DateTimePicker>
                            <TextBlock Text="Currency:"></TextBlock>
                            <StackPanel>
                                <ComboBox ItemsSource="{Binding Path=Currencies}" SelectedItem="{Binding Path=FilterSelectedCurrencyInc}" Name="CurrencyComboBoxInc">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Path=CodeLetter}"></TextBlock>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                            </StackPanel>
                            <TextBlock Text="Payment method:"></TextBlock>
                            <StackPanel>
                                <ComboBox ItemsSource="{Binding Path=PaymentMethods}" SelectedItem="{Binding Path=FilterSelectedPaymentMethodInc}" Name="PaymentMethodComboBoxInc">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Path=Title}"></TextBlock>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                                <Button Background="SlateGray" Foreground="Red" FontWeight="Bold" Command="{Binding Path=RemovePaymentMethodIncFilter}" Height="20">x</Button>
                            </StackPanel>
                            <TextBlock Text="Provider:"></TextBlock>
                            <StackPanel>
                                <ComboBox ItemsSource="{Binding Path=Providers}" SelectedItem="{Binding Path=FilterSelectedProviderInc}" Name="ProviderComboBoxInc">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Path=Title}"></TextBlock>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                                <Button Background="SlateGray" Foreground="Red" FontWeight="Bold" Command="{Binding Path=RemoveProviderIncFilter}" Height="20">x</Button>
                            </StackPanel>
                            <TextBlock Text="Category:"></TextBlock>
                            <StackPanel>
                                <ComboBox ItemsSource="{Binding Path=CategoriesInc}" SelectedItem="{Binding Path=FilterSelectedCategoryInc}" Name="CategoryComboBoxInc">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Path=Title}"></TextBlock>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                                <Button Background="SlateGray" Foreground="Red" FontWeight="Bold" Command="{Binding Path=RemoveCategoryIncFilter}" Height="20">x</Button>
                            </StackPanel>
                        </StackPanel>
                        <TabControl Grid.Row="0" Grid.Column="1">
                            <TabItem Header="Columns">
                                <lvc:CartesianChart Series="{Binding ChartCategoriesInc}" LegendLocation="Right" Background="#222E31" Foreground="White">
                                    <lvc:CartesianChart.SeriesColors>
                                        <lvc:ColorsCollection>
                                            <Color>Orange</Color>
                                        </lvc:ColorsCollection>
                                    </lvc:CartesianChart.SeriesColors>
                                    <lvc:CartesianChart.DataTooltip>
                                        <lvc:DefaultTooltip Background="Black">

                                        </lvc:DefaultTooltip>
                                    </lvc:CartesianChart.DataTooltip>
                                    <lvc:CartesianChart.AxisY>
                                        <lvc:Axis Title="Expense count&#x0a; " LabelFormatter="{Binding Formatter}" Foreground="White">
                                            <lvc:Axis.Separator>
                                                <lvc:Separator StrokeThickness="2" StrokeDashArray="4" Step="1">
                                                    <lvc:Separator.Stroke>
                                                        <SolidColorBrush Color="#404F56" />
                                                    </lvc:Separator.Stroke>
                                                </lvc:Separator>
                                            </lvc:Axis.Separator>
                                        </lvc:Axis>
                                    </lvc:CartesianChart.AxisY>
                                    <lvc:CartesianChart.AxisX>
                                        <lvc:Axis Title="&#x0a;Categories" Labels="{Binding LabelsInc}" Foreground="White">
                                            <lvc:Axis.Separator>
                                                <lvc:Separator StrokeThickness="0" StrokeDashArray="0">
                                                    <lvc:Separator.Stroke>
                                                        <SolidColorBrush Color="#404F56" />
                                                    </lvc:Separator.Stroke>
                                                </lvc:Separator>
                                            </lvc:Axis.Separator>
                                        </lvc:Axis>
                                    </lvc:CartesianChart.AxisX>
                                </lvc:CartesianChart>
                            </TabItem>
                            <TabItem Header="Pie">
                                <lvc:PieChart LegendLocation="Right" Background="CadetBlue" DataClick="Chart_OnDataClick" Hoverable="False" DataTooltip="{x:Null}"
                        Series="{Binding ChartCategoriesIncPie}">
                                    <lvc:PieChart.Resources>
                                        <Style TargetType="lvc:PieSeries">
                                            <Setter Property="Foreground" Value="Black"></Setter>
                                            <Setter Property="StrokeThickness" Value="1"></Setter>
                                            <Setter Property="Stroke" Value="DarkGray"></Setter>
                                        </Style>
                                    </lvc:PieChart.Resources>
                                </lvc:PieChart>
                            </TabItem>
                            <TabItem Header="List">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="10*"></RowDefinition>
                                        <RowDefinition Height="90*"></RowDefinition>
                                    </Grid.RowDefinitions>
                                    <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center">
                                        <TextBlock Text="Search by title: "></TextBlock>
                                        <TextBox MinWidth="550" Text="{Binding Path=SearchBoxInc, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></TextBox>
                                    </TextBlock>
                                    <DataGrid Grid.Row="1"
                                        AutoGenerateColumns="False" 
                                        IsReadOnly="True" 
                                        ItemsSource="{Binding Path=FilteredIncomes}"
                                        SelectedItem=""
                                        Background="#C4C9C9"
                                        AlternatingRowBackground="#D0D4D4"
                                        ColumnWidth="*">
                                        <DataGrid.ColumnHeaderStyle>
                                            <Style TargetType="{x:Type DataGridColumnHeader}">
                                                <!--<Setter Property="FontWeight" Value="Bold"/>-->
                                                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                <Setter Property="FontFamily" Value="Times New Roman"/>
                                                <Setter Property="Background" Value="#1E3232"></Setter>
                                                <Setter Property="Foreground" Value="White"></Setter>
                                                <Setter Property="Height" Value="16"></Setter>
                                            </Style>
                                        </DataGrid.ColumnHeaderStyle>
                                        <DataGrid.Columns>
                                            <DataGridTextColumn Header="Date" Binding="{Binding Path=DateOfIncome, StringFormat=dd.MM.yyyy}" Width="15*"></DataGridTextColumn>
                                            <DataGridTextColumn Header="Title" Binding="{Binding Path=Title}" Width="20*"></DataGridTextColumn>
                                            <DataGridTextColumn Header="Category" Binding="{Binding Path=Category.Title}" Width="15*"></DataGridTextColumn>
                                            <!--<DataGridTextColumn Header="Subcategory" Binding="{Binding Path=Subcategory.Title, TargetNullValue='-'}" Width="15*"></DataGridTextColumn>-->
                                            <DataGridTextColumn Header="Payment Method" Binding="{Binding Path=PaymentMethod.Title}" Width="20*"></DataGridTextColumn>
                                            <DataGridTextColumn Header="Amount" Width="15*">
                                                <DataGridTextColumn.Binding>
                                                    <MultiBinding Converter="{StaticResource localizeCurrencyMultiConverter}">
                                                        <Binding Path="Amount"></Binding>
                                                        <Binding Path="PaymentMethod.Currency.CodeNumber"></Binding>
                                                    </MultiBinding>
                                                </DataGridTextColumn.Binding>
                                                <DataGridTextColumn.ElementStyle>
                                                    <Style TargetType="TextBlock">
                                                        <Setter Property="HorizontalAlignment" Value="Right" />
                                                    </Style>
                                                </DataGridTextColumn.ElementStyle>
                                            </DataGridTextColumn>
                                        </DataGrid.Columns>

                                    </DataGrid>
                                </Grid>
                            </TabItem>
                        </TabControl>
                    </Grid>
                </TabItem>
            </TabControl>
        </TabItem>
        <TabItem Header="Categories">
            <Border Padding="7" BorderThickness="4" Background="DarkSlateGray">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="60*"></ColumnDefinition>
                        <ColumnDefinition Width="40*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="10*"></RowDefinition>
                        <RowDefinition Height="90*"></RowDefinition>
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Row="0" Text="C A T E G O R I E S" Foreground="NavajoWhite" FontSize="30" FontWeight="Bold" FontStyle="Oblique" HorizontalAlignment="Center" VerticalAlignment="Center"></TextBlock>
                    <TabControl Grid.Column="0" Grid.Row="1">
                        <TabItem Header="Expenses">
                            <ListView
                              ItemsSource="{Binding Path=CategoriesExpItems}"
                              Background="#C4C9C9"
                              SelectedItem="{}" 
                              SelectedIndex="0">
                                <ListView.ItemContainerStyle>
                                    <Style TargetType="ListViewItem">
                                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                    </Style>
                                </ListView.ItemContainerStyle>
                                <ListView.ItemTemplate>
                                    <DataTemplate>
                                        <Border BorderThickness="0,0,0,1" BorderBrush="#263F3F" HorizontalAlignment="Stretch">
                                            <TreeViewItem
                                            Header="{Binding Header}"
                                            ItemsSource="{Binding Path=Items}"/>
                                        </Border>
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                            </ListView>
                        </TabItem>
                        <TabItem Header="Income">
                            <ListView
                              ItemsSource="{Binding Path=CategoriesIncItems}"
                              SelectedItem="{}" 
                              Background="#C4C9C9"
                              SelectedIndex="0">
                                <ListView.ItemContainerStyle>
                                    <Style TargetType="ListViewItem">
                                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                    </Style>
                                </ListView.ItemContainerStyle>
                                <ListView.ItemTemplate>
                                    <DataTemplate>
                                        <Border BorderThickness="0,0,0,1" BorderBrush="#263F3F" HorizontalAlignment="Stretch">
                                            <TreeViewItem
                                            Header="{Binding Header}"
                                            ItemsSource="{Binding Path=Items}"/>
                                        </Border>
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                            </ListView>
                        </TabItem>
                    </TabControl>
                    <Grid Grid.Row="1" Grid.Column="2">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="10*"></RowDefinition>
                            <RowDefinition Height="80*"></RowDefinition>
                            <RowDefinition Height="10*"></RowDefinition>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="5*"></ColumnDefinition>
                            <ColumnDefinition Width="90*"></ColumnDefinition>
                            <ColumnDefinition Width="5*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="1">Add new category</TextBlock>
                        <StackPanel Grid.Row="1" Grid.Column="1">
                            <TextBlock>Choose Category Type:</TextBlock>
                            <ComboBox ItemsSource="{Binding Path=CategoryTypes}" SelectedItem="{Binding Path=SelectedOperationType}" Background="#C4C9C9">
                            </ComboBox>
                            <TextBlock></TextBlock>
                            <TextBlock>Title of category:</TextBlock>
                            <TextBox Text="{Binding TitleOfNewCategory, UpdateSourceTrigger=PropertyChanged}" Background="#C4C9C9"></TextBox>
                            <TextBlock></TextBlock>
                            <CheckBox IsChecked="{Binding Path=IsNewCategoryASubcategory, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding Path=IsCategoryTypeExp}" Background="#C4C9C9">Is subcategory</CheckBox>
                            <TextBlock>Choose Main category:</TextBlock>
                            <ComboBox ItemsSource="{Binding Path=CategoriesExp}" SelectedItem="{Binding Path=SelectedMainCategoryExpForSub}" IsEnabled="{Binding Path=IsNewCategoryASubcategory}">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Path=Title}"></TextBlock>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                            <TextBlock></TextBlock>
                            <Button Command="{Binding Path=CheckTitleOfNewCategory}" Content="Check Title">
                                <Button.Resources>
                                    <Style TargetType="{x:Type Border}">
                                        <Setter Property="CornerRadius" Value="7"/>
                                    </Style>
                                </Button.Resources>
                            </Button>
                            <TextBlock></TextBlock>
                            <Button Command="{Binding Path=AddNewCategory}" Content="Add">
                                <Button.Resources>
                                    <Style TargetType="{x:Type Border}">
                                        <Setter Property="CornerRadius" Value="7"/>
                                    </Style>
                                </Button.Resources>
                            </Button>
                        </StackPanel>
                    </Grid>
                </Grid>
            </Border>
        </TabItem>
        <TabItem Header="Providers">
            <Border Padding="7" BorderThickness="4" Background="DarkSlateGray">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="60*"></ColumnDefinition>
                        <ColumnDefinition Width="40*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="10*"></RowDefinition>
                        <RowDefinition Height="90*"></RowDefinition>
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Row="0" Text="P R O V I D E R S" Foreground="NavajoWhite" FontSize="30" FontWeight="Bold" FontStyle="Oblique" HorizontalAlignment="Center" VerticalAlignment="Center"></TextBlock>
                    <ListView Grid.Row="1"
                              ItemsSource="{Binding Path=Providers}"
                              SelectedItem="{}"
                              Background="#C4C9C9"
                              SelectedIndex="0">
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Path=Title}"></TextBlock>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                    <Grid Grid.Row="2" Grid.Column="2">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="10*"></RowDefinition>
                            <RowDefinition Height="80*"></RowDefinition>
                            <RowDefinition Height="10*"></RowDefinition>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="5*"></ColumnDefinition>
                            <ColumnDefinition Width="90*"></ColumnDefinition>
                            <ColumnDefinition Width="5*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="1">Add new provider</TextBlock>
                        <StackPanel Grid.Row="1" Grid.Column="1">
                            <TextBlock>Title of provider:</TextBlock>
                            <TextBox Text="{Binding TitleOfNewProvider, UpdateSourceTrigger=PropertyChanged}" Background="#C4C9C9"></TextBox>
                            <TextBlock></TextBlock>
                            <Button Command="{Binding Path=CheckTitleOfNewProvider}" Content="Check Title">
                                <Button.Resources>
                                    <Style TargetType="{x:Type Border}">
                                        <Setter Property="CornerRadius" Value="7"/>
                                    </Style>
                                </Button.Resources>
                            </Button>
                            <TextBlock></TextBlock>
                            <Button Command="{Binding Path=AddNewProvider}" Content="Add">
                                <Button.Resources>
                                    <Style TargetType="{x:Type Border}">
                                        <Setter Property="CornerRadius" Value="7"/>
                                    </Style>
                                </Button.Resources>
                            </Button>
                        </StackPanel>
                    </Grid>
                </Grid>
            </Border>
        </TabItem>
        <!--<TabItem Header="Test">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition></ColumnDefinition>
                    <ColumnDefinition></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition></RowDefinition>
                    <RowDefinition></RowDefinition>
                    <RowDefinition></RowDefinition>
                </Grid.RowDefinitions>
                <ScrollViewer CanContentScroll="True" PreviewMouseWheel="ScrollViewer_PreviewMouseWheel">
                    <ListView ItemsSource="{Binding Path=TestScroll}" >

                    </ListView>
                </ScrollViewer>
                <ListView Grid.Row="1" Grid.Column="0" Background="#C4C9C9" ItemsSource="{Binding Path=RecurringCharges}">
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <WrapPanel>
                                <TextBlock Text="{Binding Path=Title}"></TextBlock>
                                <TextBlock Text=" "></TextBlock>
                                <TextBlock Text="{Binding Path=Amount}"></TextBlock>
                                <TextBlock Text=" "></TextBlock>
                                <TextBlock Text="{Binding Path=Category.Title}"></TextBlock>
                            </WrapPanel>
                        </DataTemplate>
                    </ListView.ItemTemplate>

                </ListView>
            </Grid>

        </TabItem>-->

    </TabControl>

</Window>
