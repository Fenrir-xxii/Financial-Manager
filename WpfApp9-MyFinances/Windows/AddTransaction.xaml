<Window x:Class="WpfApp9_MyFinances.Windows.AddTransaction"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfApp9_MyFinances.Windows"
        xmlns:System="clr-namespace:System;assembly=mscorlib"
        xmlns:validationrules="clr-namespace:WpfApp9_MyFinances.ValidationRules"
        xmlns:wpfx="http://schemas.xceed.com/wpf/xaml/toolkit" xmlns:viewmodels="clr-namespace:WpfApp9_MyFinances.ViewModels" d:DataContext="{d:DesignInstance Type=viewmodels:AddTransactionViewModel}"
        mc:Ignorable="d"
        Title="AddTransaction" Height="550" Width="500"
    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2" xmlns:local1="clr-namespace:WpfApp9_MyFinances.Converters">
    <Window.Resources>
        <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="Visibility" Value="Visible" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"></Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border
                        CornerRadius="3"
                        Background="{TemplateBinding Background}"
                        BorderThickness="0"
                        Width="6" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarThumbHor" TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border
                        CornerRadius="3"
                        Background="{TemplateBinding Background}"
                        BorderThickness="0"
                        Height="6" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
            <Track
            Name="PART_Track"
            IsDirectionReversed="true">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb
                    Style="{StaticResource ScrollBarThumb}"
                    Margin="2,0,2,0"
                    Background="#1A2C2C" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageDownCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
        </ControlTemplate>

        <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
            <Track
            Name="PART_Track"
            IsDirectionReversed="False">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageLeftCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb
                    Style="{StaticResource ScrollBarThumbHor}"
                    Margin="0,2,0,2"
                    Background="#1A2C2C" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageRightCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
        </ControlTemplate>

        <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="Auto" />
                    <Setter Property="Height" Value="10" />
                    <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
                </Trigger>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Width" Value="10" />
                    <Setter Property="Height" Value="Auto" />
                    <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="FavsScrollViewer" TargetType="{x:Type ScrollViewer}">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <ScrollContentPresenter Grid.Column="1" />
                            <ScrollBar
                            Grid.Row="0"
                            Grid.Column="0"
                            Name="PART_VerticalScrollBar"
                            Value="{TemplateBinding VerticalOffset}"
                            Maximum="{TemplateBinding ScrollableHeight}"
                            ViewportSize="{TemplateBinding ViewportHeight}"
                            Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" />
                            <ScrollBar
                            Name="PART_HorizontalScrollBar"
                            Orientation="Horizontal"
                            Grid.Row="1"
                            Grid.Column="1"
                            Value="{TemplateBinding HorizontalOffset}"
                            Maximum="{TemplateBinding ScrollableWidth}"
                            ViewportSize="{TemplateBinding ViewportWidth}"
                            Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type ScrollViewer}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <ScrollContentPresenter Grid.Column="0" />
                            <ScrollBar
                            x:Name="PART_VerticalScrollBar"
                            Grid.Row="0"
                            Grid.Column="1"
                            Value="{TemplateBinding VerticalOffset}"
                            Maximum="{TemplateBinding ScrollableHeight}"
                            ViewportSize="{TemplateBinding ViewportHeight}"
                            Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" />
                            <ScrollBar
                            x:Name="PART_HorizontalScrollBar"
                            Orientation="Horizontal"
                            Grid.Row="1"
                            Grid.Column="0"
                            Value="{TemplateBinding HorizontalOffset}"
                            Maximum="{TemplateBinding ScrollableWidth}"
                            ViewportSize="{TemplateBinding ViewportWidth}"
                            Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="ComboBox.Static.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#C4C9C9" Offset="0.0"/>
            <GradientStop Color="#C4C9C9" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Static.Border" Color="#1E3232"/>
        <SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="#1E3232"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="#C4C9C9"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="#FFABADB3"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#1E3232" Offset="0.0"/>
            <GradientStop Color="#C4C9C9" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="#FF000000"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="#FF7EB4EA"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFEBF4FC" Offset="0.0"/>
            <GradientStop Color="#FFDCECFC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="#FF7EB4EA"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFDAECFC" Offset="0.0"/>
            <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#FF569DE5"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="#FF000000"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="#FF569DE5"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFDAEBFC" Offset="0.0"/>
            <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#FF569DE5"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="#FFF0F0F0"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFD9D9D9"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent"/>
        <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="ClickMode" Value="Press"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="templateRoot" Background="{StaticResource ComboBox.Static.Background}" BorderBrush="{StaticResource ComboBox.Static.Border}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="true" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                <Path x:Name="arrow" Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z" Fill="{StaticResource ComboBox.Static.Glyph}" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.MouseOver.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Pressed.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Disabled.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxTemplate1" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                    <theme:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MinWidth="{Binding ActualWidth, ElementName=templateRoot}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                        <Border x:Name="dropDownBorder" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </theme:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}" Background="#FF0C4848"/>
                <ContentPresenter x:Name="contentPresenter" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                    <Setter Property="IsEnabled" Value="False"></Setter>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Validation.ErrorTemplate">
                        <Setter.Value>
                            <ControlTemplate>
                                <DockPanel>
                                    <Border BorderBrush="Gray" BorderThickness="0">
                                        <AdornedElementPlaceholder/>
                                    </Border>
                                </DockPanel>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>



        <ControlTemplate x:Key="ButtonTemplate" TargetType="{x:Type Button}">
            <Border Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Margin="{TemplateBinding Padding}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsMouseOver" Value="True">
                    <Setter TargetName="Border" Property="BorderBrush" Value="NavajoWhite" />
                </Trigger>
            </ControlTemplate.Triggers>
            <ControlTemplate.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="7"/>
                </Style>
                <!--<Style TargetType="Button">
                    <Setter Property="Background" Value="#263F3F"></Setter>
                    <Setter Property="Foreground" Value="White"></Setter>
                </Style>-->
            </ControlTemplate.Resources>
        </ControlTemplate>
        <Style TargetType="Button">
            <Setter Property="Background" Value="#263F3F"></Setter>
            <!--<Setter Property="Foreground" Value="White"></Setter>-->
            <Setter Property="Foreground" Value="NavajoWhite"></Setter>
            <Setter Property="Template" Value="{StaticResource ButtonTemplate}"></Setter>
        </Style>
        <Style TargetType="Grid">
            <Setter Property="Background" Value="DarkSlateGray"></Setter>
        </Style>
        <Style TargetType="TabItem">
            <Setter Property="Background" Value="#1E3232"></Setter>
            <Setter Property="Foreground" Value="White"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabItem">
                        <Grid>
                            <Border 
                                Name="Border"
                                Margin="0,0,-4,0" 
                                Background="DarkSlateGray"
                                BorderBrush="AliceBlue" 
                                BorderThickness="1,1,1,1" 
                                CornerRadius="2,12,0,0" >
                                <ContentPresenter x:Name="ContentSite"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Center"
                                    ContentSource="Header"
                                    Margin="12,2,12,2"
                                    RecognizesAccessKey="True"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Panel.ZIndex" Value="100" />
                                <Setter TargetName="Border" Property="Background" Value="#1E3232" />
                                <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,0" />
                                <Setter Property="Background" Value="#1E3232"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="TabControl">
            <Setter Property="Background" Value="#1E3232"></Setter>
        </Style>
        <Style TargetType="ComboBox">
            <Setter Property="Template" Value="{StaticResource ComboBoxTemplate1}"></Setter>
        </Style>
        <Style TargetType="TextBox">
            <Setter Property="Background" Value="#C4C9C9"></Setter>
        </Style>

    </Window.Resources>

   


    <Grid>
        <Border Padding="10" BorderThickness="3" Background="DarkSlateGray">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="33*"></ColumnDefinition>
                    <ColumnDefinition Width="33*"></ColumnDefinition>
                    <ColumnDefinition Width="33*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="10*"></RowDefinition>
                    <RowDefinition Height="65*"></RowDefinition>
                    <RowDefinition Height="10*"></RowDefinition>
                </Grid.RowDefinitions>
                <StackPanel Grid.ColumnSpan="3">
                    <TextBlock Text="Select transaction's payment method:" Foreground="NavajoWhite" FontSize="14" FontWeight="Bold" HorizontalAlignment="Center"></TextBlock>
                    <!--<ComboBox Template="{DynamicResource ComboBoxTemplate1}" ItemsSource="{Binding Path=PaymentMethods}" SelectedItem="{Binding Path=SelectedPaymentMethod}" Background="#FFC4C9C9" BorderBrush="#FF1E3232">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Path=Title}"></TextBlock>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>-->
                    <ComboBox Template="{DynamicResource ComboBoxTemplate1}" ItemsSource="{Binding Path=PaymentMethods}" Background="#FFC4C9C9" BorderBrush="#FF1E3232">
                        <ComboBox.SelectedItem>
                            <Binding Path="SelectedPaymentMethod">
                                <Binding.ValidationRules>
                                    <validationrules:SelectionComboBoxValidationRule ValidatesOnTargetUpdated="True"/>
                                </Binding.ValidationRules>
                            </Binding>
                        </ComboBox.SelectedItem>
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Path=Title}"></TextBlock>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <!--<TextBlock Text="{Binding Path= SelectedPaymentMethod.CurrentBalance, StringFormat='{}{0:c}'}" Foreground="NavajoWhite">-->
                    <TextBlock Foreground="NavajoWhite">
                        <TextBlock.Text>
                            <MultiBinding Converter="{StaticResource localizeCurrencyMultiConverter}">
                                <Binding Path="SelectedPaymentMethod.CurrentBalance"></Binding>
                                <Binding Path="SelectedPaymentMethod.Currency.CodeNumber"></Binding>
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>
                   
                </StackPanel>
                <TabControl Grid.Row="1" Grid.RowSpan="2" Grid.ColumnSpan="3">
                    <TabItem Header="Expense">
                        <AdornerDecorator>
                        <Border BorderThickness="2">
                            <Grid Margin="2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="40*"></ColumnDefinition>
                                    <ColumnDefinition Width="20*"></ColumnDefinition>
                                    <ColumnDefinition Width="40*"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="75*"></RowDefinition>
                                    <RowDefinition Height="25*"></RowDefinition>
                                </Grid.RowDefinitions>
                                <StackPanel Grid.Row="0" Grid.ColumnSpan="3" Margin="2">
                                    <TextBlock>Date:</TextBlock>
                                    <!--<DatePicker SelectedDateFormat="Long" FirstDayOfWeek="Monday" SelectedDate="{Binding Path=ExpenseTransaction.DateOfExpense}" Background="#C4C9C9"></DatePicker>-->
                                    <wpfx:DateTimePicker Text="{Binding Path=ExpenseTransaction.DateOfExpense}" Background="#C4C9C9" Format="LongDate" AutoCloseCalendar="True" CultureInfo="en"></wpfx:DateTimePicker>
                                    <TextBlock>Product name/title:</TextBlock>
                                    <!--<TextBox Text="{Binding Path= ExpenseTransaction.Title, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></TextBox>-->
                                    <TextBox>
                                        <TextBox.Text>
                                            <Binding Path="ExpenseTransaction.Title" UpdateSourceTrigger="PropertyChanged">
                                                <Binding.ValidationRules>
                                                    <validationrules:NotEmptyValidationRule ValidatesOnTargetUpdated="True"/>
                                                </Binding.ValidationRules>
                                            </Binding>
                                        </TextBox.Text>
                                    </TextBox>
                                    <TextBlock>Provider:</TextBlock>
                                    <!--<ComboBox ItemsSource="{Binding Path=Providers}" SelectedItem="{Binding Path=SelectedProvider}">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Path=Title}"></TextBlock>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                    </ComboBox>-->
                                    <ComboBox ItemsSource="{Binding Path=Providers}">
                                        <ComboBox.SelectedItem>
                                            <Binding Path="SelectedProvider">
                                                <Binding.ValidationRules>
                                                    <validationrules:SelectionComboBoxValidationRule ValidatesOnTargetUpdated="True"/>
                                                </Binding.ValidationRules>
                                            </Binding>
                                        </ComboBox.SelectedItem>
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Path=Title}"></TextBlock>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                    </ComboBox>
                                        <TextBlock>Amount:</TextBlock>
                                        <wpfx:DecimalUpDown Value="{Binding Path=ExpenseAmount, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" FormatString="F2" Increment="0.01" TextAlignment="Left" Minimum="0.01" DefaultValue="0.01" Background="#C4C9C9"/>
                                        <TextBlock>Category:</TextBlock>
                                    <!--<ComboBox ItemsSource="{Binding Path=CategoriesExp}" SelectedItem="{Binding Path=SelectedCategoryExp}">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Path=Title}"></TextBlock>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                    </ComboBox>-->
                                    <ComboBox ItemsSource="{Binding Path=CategoriesExp}">
                                        <ComboBox.SelectedItem>
                                            <Binding Path="SelectedCategoryExp">
                                                <Binding.ValidationRules>
                                                    <validationrules:SelectionComboBoxValidationRule ValidatesOnTargetUpdated="True"/>
                                                </Binding.ValidationRules>
                                            </Binding>
                                        </ComboBox.SelectedItem>
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Path=Title}"></TextBlock>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                    </ComboBox>
                                    <TextBlock>SubCategory:</TextBlock>
                                    <!--<ComboBox ItemsSource="{Binding Path=SubCategoriesExp}" SelectedItem="{Binding Path=SelectedSubCategoryExp}" BorderBrush="#FFA09C9C">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Path=Title}"></TextBlock>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                    </ComboBox>-->
                                    <ComboBox ItemsSource="{Binding Path=SubCategoriesExp}" BorderBrush="#FFA09C9C">
                                        <ComboBox.SelectedItem>
                                            <Binding Path="SelectedSubCategoryExp">
                                                <Binding.ValidationRules>
                                                    <validationrules:SelectionComboBoxValidationRule ValidatesOnTargetUpdated="True"/>
                                                </Binding.ValidationRules>
                                            </Binding>
                                        </ComboBox.SelectedItem>
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Path=Title}"></TextBlock>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                    </ComboBox>
                                    <TextBlock>Description / comment:</TextBlock>
                                    <TextBox Text="{Binding Path=ExpenseTransaction.Description}"></TextBox>
                                    <TextBlock>
                                        <TextBlock>Planned balance: </TextBlock>
                                    <!--<TextBlock Text="{Binding Path= PlannedBalanceExp, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat='C', ConverterCulture='uk-UA'}"></TextBlock>-->
                                        <TextBlock Foreground="NavajoWhite">
                                            <TextBlock.Text>
                                                <MultiBinding Converter="{StaticResource localizeCurrencyMultiConverter}">
                                                    <Binding Path="PlannedBalanceExp"></Binding>
                                                    <Binding Path="SelectedPaymentMethod.Currency.CodeNumber"></Binding>
                                                </MultiBinding>
                                            </TextBlock.Text>
                                        </TextBlock>
                                    </TextBlock>
                                </StackPanel>
                                <StackPanel Grid.Row="2" Margin="2">
                                    <Button Command="{Binding Path=SaveTransactionExp}" Height="30">Save</Button>
                                </StackPanel>
                                <StackPanel Grid.Row="2" Grid.Column="2" Margin="2">
                                    <Button Command="{Binding Path=CancelTransaction}" Height="30">Cancel</Button>
                                </StackPanel>
                            </Grid>
                        </Border>
                        </AdornerDecorator>
                    </TabItem>
                    <TabItem Header="Income">
                        <AdornerDecorator>
                            <Border BorderThickness="2">
                            <Grid Margin="2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="40*"></ColumnDefinition>
                                    <ColumnDefinition Width="20*"></ColumnDefinition>
                                    <ColumnDefinition Width="40*"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="75*"></RowDefinition>
                                    <RowDefinition Height="25*"></RowDefinition>
                                </Grid.RowDefinitions>
                                <StackPanel Grid.Row="0" Grid.ColumnSpan="3" Margin="2">
                                    <TextBlock>Date:</TextBlock>
                                    <!--<DatePicker SelectedDateFormat="Long" FirstDayOfWeek="Monday" SelectedDate="{Binding Path=IncomeTransaction.DateOfIncome}"></DatePicker>-->
                                    <wpfx:DateTimePicker Text="{Binding Path=IncomeTransaction.DateOfIncome}" Background="#C4C9C9" Format="LongDate" AutoCloseCalendar="True" CultureInfo="en"></wpfx:DateTimePicker>
                                    <TextBlock>Product name/title:</TextBlock>
                                    <!--<TextBox Text="{Binding Path= IncomeTransaction.Title, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></TextBox>-->
                                    <TextBox>
                                        <TextBox.Text>
                                            <Binding Path="IncomeTransaction.Title" UpdateSourceTrigger="PropertyChanged">
                                                <Binding.ValidationRules>
                                                    <validationrules:NotEmptyValidationRule ValidatesOnTargetUpdated="True"/>
                                                </Binding.ValidationRules>
                                            </Binding>
                                        </TextBox.Text>
                                    </TextBox>
                                    <TextBlock>Provider:</TextBlock>
                                    <!--<ComboBox ItemsSource="{Binding Path=Providers}" SelectedItem="{Binding Path=SelectedProvider}">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Path=Title}"></TextBlock>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                    </ComboBox>-->
                                    <ComboBox ItemsSource="{Binding Path=Providers}">
                                        <ComboBox.SelectedItem>
                                            <Binding Path="SelectedProvider">
                                                <Binding.ValidationRules>
                                                    <validationrules:SelectionComboBoxValidationRule ValidatesOnTargetUpdated="True"/>
                                                </Binding.ValidationRules>
                                            </Binding>
                                        </ComboBox.SelectedItem>
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Path=Title}"></TextBlock>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                    </ComboBox>
                                    <TextBlock>Amount:</TextBlock>
                                        <wpfx:DecimalUpDown Value="{Binding Path=IncomeAmount, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" FormatString="F2" Increment="0.01" TextAlignment="Left" Minimum="0.01" Background="#C4C9C9"/>
                                    <!--<TextBox Text="{Binding Path=IncomeTransaction.Amount, UpdateSourceTrigger=PropertyChanged}"></TextBox>-->
                                    <TextBlock>Category:</TextBlock>
                                    <!--<ComboBox ItemsSource="{Binding Path=CategoriesInc}" SelectedItem="{Binding Path=SelectedCategoryInc}">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Path=Title}"></TextBlock>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                    </ComboBox>-->
                                    <ComboBox ItemsSource="{Binding Path=CategoriesInc}">
                                        <ComboBox.SelectedItem>
                                            <Binding Path="SelectedCategoryInc">
                                                <Binding.ValidationRules>
                                                    <validationrules:SelectionComboBoxValidationRule ValidatesOnTargetUpdated="True"/>
                                                </Binding.ValidationRules>
                                            </Binding>
                                        </ComboBox.SelectedItem>
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Path=Title}"></TextBlock>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                    </ComboBox>
                                    <TextBlock>Description / comment:</TextBlock>
                                    <TextBox Text="{Binding Path=IncomeTransaction.Description}"></TextBox>
                                    <TextBlock>
                                        <TextBlock>Planned balance: </TextBlock>
                                        <!--<TextBlock Text="{Binding Path= PlannedBalanceInc, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat='C', ConverterCulture='uk-UA'}"></TextBlock>-->
                                        <TextBlock Foreground="NavajoWhite">
                                            <TextBlock.Text>
                                                <MultiBinding Converter="{StaticResource localizeCurrencyMultiConverter}">
                                                    <Binding Path="PlannedBalanceInc"></Binding>
                                                    <Binding Path="SelectedPaymentMethod.Currency.CodeNumber"></Binding>
                                                </MultiBinding>
                                            </TextBlock.Text>
                                        </TextBlock>
                                    </TextBlock>
                                </StackPanel>
                                <StackPanel Grid.Row="2">
                                    <Button Command="{Binding Path=SaveTransactionInc}" Height="30">Save</Button>
                                </StackPanel>
                                <StackPanel Grid.Row="2" Grid.Column="2">
                                    <Button Command="{Binding Path=CancelTransaction}" Height="30">Cancel</Button>
                                </StackPanel>
                            </Grid>
                        </Border>
                        </AdornerDecorator>
                    </TabItem>
                    <TabItem Header="Transfer">
                        <AdornerDecorator>
                        <Border BorderThickness="2">
                            <Grid Margin="2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="40*"></ColumnDefinition>
                                    <ColumnDefinition Width="20*"></ColumnDefinition>
                                    <ColumnDefinition Width="40*"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="75*"></RowDefinition>
                                    <RowDefinition Height="25*"></RowDefinition>
                                </Grid.RowDefinitions>
                                    <StackPanel Grid.Row="0" Grid.ColumnSpan="3" Margin="2">
                                        <TextBlock>Date:</TextBlock>
                                        <!--<DatePicker SelectedDateFormat="Long" FirstDayOfWeek="Monday" SelectedDate="{Binding Path=TransferTransaction.DateOfTransfer}"></DatePicker>-->
                                        <wpfx:DateTimePicker Text="{Binding Path=TransferTransaction.DateOfTransfer}" Background="#C4C9C9" Format="LongDate" AutoCloseCalendar="True" CultureInfo="en"></wpfx:DateTimePicker>
                                        <TextBlock>Receiver:</TextBlock>
                                        <!--<ComboBox ItemsSource="{Binding Path=PaymentMethodsForTransfer}" SelectedItem="{Binding Path=SelectedPaymentMethodForTransfer}">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Path=Title}"></TextBlock>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                    </ComboBox>-->
                                        <ComboBox ItemsSource="{Binding Path=PaymentMethodsForTransfer}">
                                            <ComboBox.SelectedItem>
                                                <Binding Path="SelectedPaymentMethodForTransfer">
                                                    <Binding.ValidationRules>
                                                        <validationrules:SelectionComboBoxValidationRule ValidatesOnTargetUpdated="True"/>
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </ComboBox.SelectedItem>
                                            <ComboBox.ItemTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding Path=Title}"></TextBlock>
                                                </DataTemplate>
                                            </ComboBox.ItemTemplate>
                                        </ComboBox>
                                        <TextBlock>Amount:</TextBlock>
                                        <!--<TextBox Text="{Binding Path=TransferTransaction.Amount, UpdateSourceTrigger=PropertyChanged}"></TextBox>-->
                                        <wpfx:DecimalUpDown Value="{Binding Path=TransferAmount, UpdateSourceTrigger=PropertyChanged}" FormatString="F2" Increment="0.01" TextAlignment="Left" Minimum="0.01" Background="#C4C9C9"/>
                                        <TextBlock>Description / comment:</TextBlock>
                                        <TextBox Text="{Binding Path=TransferTransaction.Description}"></TextBox>
                                        <TextBlock>
                                            <TextBlock>Planned balance of sender: </TextBlock>
                                            <!--<TextBlock Text="{Binding Path=PlannedBalanceSenderTfr, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat='C', ConverterCulture='uk-UA'}"></TextBlock>-->
                                            <TextBlock Foreground="NavajoWhite">
                                                <TextBlock.Text>
                                                    <MultiBinding Converter="{StaticResource localizeCurrencyMultiConverter}">
                                                        <Binding Path="PlannedBalanceSenderTfr"></Binding>
                                                        <Binding Path="SelectedPaymentMethod.Currency.CodeNumber"></Binding>
                                                    </MultiBinding>
                                                </TextBlock.Text>
                                            </TextBlock>
                                        </TextBlock>
                                        <TextBlock>
                                            <TextBlock>Planned balance of receiver: </TextBlock>
                                            <!--<TextBlock Text="{Binding Path=PlannedBalanceReceiverTfr, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat='C', ConverterCulture='uk-UA'}"></TextBlock>-->
                                            <TextBlock Foreground="NavajoWhite">
                                                <TextBlock.Text>
                                                    <MultiBinding Converter="{StaticResource localizeCurrencyMultiConverter}">
                                                        <Binding Path="PlannedBalanceReceiverTfr"></Binding>
                                                        <Binding Path="SelectedPaymentMethodForTransfer.Currency.CodeNumber"></Binding>
                                                    </MultiBinding>
                                                </TextBlock.Text>
                                            </TextBlock>
                                        </TextBlock>
                                    </StackPanel>
                                    <StackPanel Grid.Row="2">
                                    <Button Command="{Binding Path=SaveTransactionTransf}" Height="30">Save</Button>
                                    <!--<Button Command="ApplicationCommands.Save" Height="30">Save</Button>-->
                                </StackPanel>
                                <StackPanel Grid.Row="2" Grid.Column="2">
                                    <Button Command="{Binding Path=CancelTransaction}" Height="30">Cancel</Button>
                                </StackPanel>
                            </Grid>
                        </Border>
                        </AdornerDecorator>
                    </TabItem>
                    <TabItem Header="Exchange">
                        <AdornerDecorator>
                        <Border BorderThickness="2">
                            <Grid Margin="2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="40*"></ColumnDefinition>
                                    <ColumnDefinition Width="20*"></ColumnDefinition>
                                    <ColumnDefinition Width="40*"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="75*"></RowDefinition>
                                    <RowDefinition Height="25*"></RowDefinition>
                                </Grid.RowDefinitions>
                                <StackPanel Grid.Row="0" Grid.ColumnSpan="3" Margin="2">
                                    <TextBlock>Date:</TextBlock>
                                    <!--<DatePicker SelectedDateFormat="Long" FirstDayOfWeek="Monday" SelectedDate="{Binding Path=TransferTransaction.DateOfTransfer}"></DatePicker>-->
                                    <wpfx:DateTimePicker Text="{Binding Path=ExchangeTransaction.DateOfExchange}" Background="#C4C9C9" Format="LongDate" AutoCloseCalendar="True" CultureInfo="en"></wpfx:DateTimePicker>
                                    <TextBlock>Receiver:</TextBlock>
                                    <!--<ComboBox ItemsSource="{Binding Path=PaymentMethodsForExchange}" SelectedItem="{Binding Path=SelectedPaymentMethodForExchange}">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Path=Title}"></TextBlock>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                    </ComboBox>-->
                                        <ComboBox ItemsSource="{Binding Path=PaymentMethodsForExchange}">
                                            <ComboBox.SelectedItem>
                                                <Binding Path="SelectedPaymentMethodForExchange">
                                                    <Binding.ValidationRules>
                                                        <validationrules:SelectionComboBoxValidationRule ValidatesOnTargetUpdated="True"/>
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </ComboBox.SelectedItem>
                                            <ComboBox.ItemTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding Path=Title}"></TextBlock>
                                                </DataTemplate>
                                            </ComboBox.ItemTemplate>
                                        </ComboBox>
                                        <TextBlock>Amount:</TextBlock>
                                    <!--<TextBox Text="{Binding Path=TransferTransaction.Amount, UpdateSourceTrigger=PropertyChanged}"></TextBox>-->
                                        <wpfx:DecimalUpDown Value="{Binding Path=ExchangeAmount, UpdateSourceTrigger=PropertyChanged}" FormatString="F2" Increment="0.01" TextAlignment="Left" Minimum="0.01" Background="#C4C9C9"/>
                                    <TextBlock>Exchange rate:</TextBlock>
                                    <wpfx:DecimalUpDown Value="{Binding Path=ExchangeRate, UpdateSourceTrigger=PropertyChanged}" FormatString="F" CultureInfo="uk-UA" Increment="0.01" TextAlignment="Left" Minimum="0.01" Background="#C4C9C9"/>
                                        <TextBlock>    
                                            <TextBlock>Resulting exchange amount:</TextBlock>
                                            <TextBlock Text="{Binding Path=ExchangeAmountResult}"></TextBlock>
                                            <TextBlock Text="{Binding Path=SelectedPaymentMethodForExchange.Currency.CodeLetter}"></TextBlock>
                                        </TextBlock>
                                        <TextBlock>Description / comment:</TextBlock>
                                    <TextBox Text="{Binding Path=ExchangeTransaction.Description}"></TextBox>
                                    <TextBlock>
                                        <TextBlock>Planned balance of sender: </TextBlock>
                                        <!--<TextBlock Text="{Binding Path=PlannedBalanceSenderTfr, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat='C', ConverterCulture='uk-UA'}"></TextBlock>-->
                                        <TextBlock Foreground="NavajoWhite">
                                            <TextBlock.Text>
                                                <MultiBinding Converter="{StaticResource localizeCurrencyMultiConverter}">
                                                    <Binding Path="PlannedBalanceSenderExc"></Binding>
                                                    <Binding Path="SelectedPaymentMethod.Currency.CodeNumber"></Binding>
                                                </MultiBinding>
                                            </TextBlock.Text>
                                        </TextBlock>
                                    </TextBlock>
                                    <TextBlock>
                                        <TextBlock>Planned balance of receiver: </TextBlock>
                                        <!--<TextBlock Text="{Binding Path=PlannedBalanceReceiverTfr, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat='C', ConverterCulture='uk-UA'}"></TextBlock>-->
                                        <TextBlock Foreground="NavajoWhite">
                                            <TextBlock.Text>
                                                <MultiBinding Converter="{StaticResource localizeCurrencyMultiConverter}">
                                                    <Binding Path="PlannedBalanceReceiverExc"></Binding>
                                                        <Binding Path="SelectedPaymentMethodForExchange.Currency.CodeNumber"></Binding>
                                                </MultiBinding>
                                            </TextBlock.Text>
                                        </TextBlock>
                                    </TextBlock>
                                    <TextBlock></TextBlock>
                                    <TextBlock TextAlignment="Center" FontSize="30">
                                        <TextBlock Text="{Binding Path=SelectedPaymentMethod.Currency.CodeLetter}"></TextBlock>
                                        <TextBlock Text=" -> " FontSize="30"></TextBlock>
                                        <TextBlock Text="{Binding Path=SelectedPaymentMethodForExchange.Currency.CodeLetter}"></TextBlock>
                                    </TextBlock>
                                </StackPanel>
                                <StackPanel Grid.Row="2">
                                    <Button Command="{Binding Path=SaveTransactionExc}" Height="30">Save</Button>
                                    <!--<Button Command="ApplicationCommands.Save" Height="30">Save</Button>-->
                                </StackPanel>
                                <StackPanel Grid.Row="2" Grid.Column="2">
                                    <Button Command="{Binding Path=CancelTransaction}" Height="30">Cancel</Button>
                                </StackPanel>
                            </Grid>
                        </Border>
                        </AdornerDecorator>
                    </TabItem>
                </TabControl>

            </Grid>
        </Border>
    </Grid>
</Window>

